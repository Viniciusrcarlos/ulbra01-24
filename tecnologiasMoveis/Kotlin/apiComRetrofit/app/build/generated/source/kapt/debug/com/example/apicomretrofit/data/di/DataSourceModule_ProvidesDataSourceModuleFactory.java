// Generated by Dagger (https://dagger.dev).
package com.example.apicomretrofit.data.di;

import com.example.apicomretrofit.data.datasources.CharactersDataSource;
import com.example.apicomretrofit.data.network.CharactersApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataSourceModule_ProvidesDataSourceModuleFactory implements Factory<CharactersDataSource> {
  private final Provider<CharactersApi> apiProvider;

  public DataSourceModule_ProvidesDataSourceModuleFactory(Provider<CharactersApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public CharactersDataSource get() {
    return providesDataSourceModule(apiProvider.get());
  }

  public static DataSourceModule_ProvidesDataSourceModuleFactory create(
      Provider<CharactersApi> apiProvider) {
    return new DataSourceModule_ProvidesDataSourceModuleFactory(apiProvider);
  }

  public static CharactersDataSource providesDataSourceModule(CharactersApi api) {
    return Preconditions.checkNotNullFromProvides(DataSourceModule.INSTANCE.providesDataSourceModule(api));
  }
}

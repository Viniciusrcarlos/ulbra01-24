// Generated by Dagger (https://dagger.dev).
package com.example.apicomretrofit.data.di;

import com.example.apicomretrofit.data.datasources.CharactersDataSource;
import com.example.apicomretrofit.data.repositories.CharactersRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvidesCharactersRepositoryFactory implements Factory<CharactersRepository> {
  private final Provider<CharactersDataSource> dataSourceProvider;

  public RepositoryModule_ProvidesCharactersRepositoryFactory(
      Provider<CharactersDataSource> dataSourceProvider) {
    this.dataSourceProvider = dataSourceProvider;
  }

  @Override
  public CharactersRepository get() {
    return providesCharactersRepository(dataSourceProvider.get());
  }

  public static RepositoryModule_ProvidesCharactersRepositoryFactory create(
      Provider<CharactersDataSource> dataSourceProvider) {
    return new RepositoryModule_ProvidesCharactersRepositoryFactory(dataSourceProvider);
  }

  public static CharactersRepository providesCharactersRepository(CharactersDataSource dataSource) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providesCharactersRepository(dataSource));
  }
}
